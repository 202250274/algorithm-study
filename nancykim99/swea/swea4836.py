# 4836. 색칠하기 D1
# 그림과 같이 인덱스가 있는 10x10 격자에 빨간색과 파란색을 칠하려고 한다.
# N개의 영역에 대해 왼쪽 위와 오른쪽 아래 모서리 인덱스, 칠할 색상이 주어질 때, 칠이 끝난 후 색이 겹쳐 보라색이 된 칸 수를 구하는 프로그램을 만드시오.
# 주어진 정보에서 같은 색인 영역은 겹치지 않는다.
# 예를 들어 2개의 색칠 영역을 갖는 위 그림에 대한 색칠 정보이다.
# 2
# 2 2 4 4 1  ( [2,2] 부터 [4,4] 까지 color 1 (빨강) 으로 칠한다 )
# 3 3 6 6 2 ( [3,3] 부터 [6,6] 까지 color 2 (파랑) 으로 칠한다 )
# [입력]
# 첫 줄에 테스트 케이스 개수 T가 주어진다.   ( 1 ≤ T ≤ 50 )
# 다음 줄부터 테스트케이스의 첫 줄에 칠할 영역의 개수 N이 주어진다. ( 2 ≤ N ≤ 30 )
# 다음 줄에 왼쪽 위 모서리 인덱스 r1, c1, 오른쪽 아래 모서리 r2, c2와 색상 정보 color가 주어진다. ( 0 ≤ r1, c1, r2, c2 ≤ 9 )
# color = 1 (빨강), color = 2 (파랑)
# [출력]
# 각 줄마다 "#T" (T는 테스트 케이스 번호)를 출력한 뒤, 답을 출력한다.

T = int(input()) # 테스트 케이스

for tc in range(1, T+1):
    N = int(input())
    # r1, c1, r2, c2, color = map(int, input().split())

    arr = [[0] * 10 for _ in range(10)]

    for i in range(N):
        r1, c1, r2, c2, color = map(int, input().split())
        if color == 1:
            # 빨강으로 칠하기
            for i in range(10):
                for j in range(10):
                    if r1 <= i <= r2 and c1 <= j <= c2:
                        arr[i][j] += 1
        if color == 2:
            # 파랑으로 칠하기
            purple_area = 0
            for i in range(10):
                for j in range(10):
                    if r1 <= i <= r2 and c1 <= j <= c2:
                        arr[i][j] += 2

        purple_area = 0
        for i in range(10):
            for j in range(10):
                # 겹친 면적 찾기
                if arr[i][j] == 3:
                    purple_area += 1

    print(f'#{tc}', purple_area)


# 해결 방법 : 빨강을 먼저 칠하고, 파랑을 칠한 후, 보라색을 구하기
#   1을 += 하고, 2를 += 한 다음, 3을 구하기
# 시행착오 1 : 빨강으로 칠할 때, = 1을 해, 제대로 돌아가지 않음. +=1을 했어야 했다
# 시행착오 2 : 파랑색 for문에 겹친 면적을 넣어, 파란색이 칠해질 때만, 겹쳐지는 면접을 찾는 코드를 넣었다.
#   다른 내용의 for문일때는 일단 나누자!